{"version":3,"sources":["stores/index.ts","actions/Library.ts","components/Sidebar.tsx","components/Note.tsx","components/SetupWizard.tsx","components/App.tsx","components/Progress.tsx","components/Job.tsx","utils/setInterval.ts","components/Uploader.tsx","components/Viewer.tsx","utils/useContainerDimenstions.ts","components/Search.tsx","index.tsx"],"names":["LOAD_LIBRARY","ADD_JOB","REFRESH_JOB","LOAD_DOCUMENT","SET_BREADCRUMB","reducer","state","action","type","library","payload","jobs","newJobs","map","item","id","document","breadcrumbs","logger","store","next","refreshLibrary","dispatch","a","fetch","then","d","json","data","documentsAvailable","documents","results","ready","loading","SubMenu","Menu","Sider","Layout","Sidebar","useDispatch","useSelector","useEffect","width","className","mode","defaultOpenKeys","style","height","borderRight","Item","icon","FileAddOutlined","to","ThunderboltOutlined","title","filename","Note","children","SetupWizard","visible","onClose","useForm","register","handleSubmit","control","onCancel","footer","onSubmit","method","body","JSON","stringify","res","name","defaultValue","render","onChange","value","Option","onClick","Header","Content","App","props","useState","wizardOpen","setWizardOpen","search","setSearch","history","useHistory","onSearch","push","encodeURIComponent","theme","defaultSelectedKeys","e","target","onPressEnter","placeholder","SearchOutlined","padding","margin","b","idx","Progress","percent","status","done","success","Job","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","jobId","job","progress","Uploader","onDropInternal","useCallback","acceptedFiles","file","console","log","addToLibrary","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","fontSize","itemLayout","dataSource","renderItem","Viewer","documentId","useParams","numPages","setNumPages","setPdf","containerRef","myRef","dimensions","setDimensions","getDimensions","offsetWidth","offsetHeight","handleResize","window","addEventListener","removeEventListener","useContainerDimensions","ref","size","onLoadSuccess","pdf","Array","from","el","index","pageNumber","Search","documentSearch","setDocumentSearch","documentTextSearch","setDocumentTextSearch","q","URLSearchParams","useLocation","get","axios","params","initialState","middleware","applyMiddleware","thunk","createStore","configureStore","queryClient","QueryClient","ReactDOM","StrictMode","QueryClientProvider","client","path","getElementById"],"mappings":"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","file":"static/js/main.04111e3a.chunk.js","sourcesContent":["import {applyMiddleware, createStore, Middleware, Store} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {JobModel} from \"../models/Job\";\nimport {LibraryModel} from \"../models/Library\";\n\nexport const\n    LOAD_LIBRARY = 'LOAD_LIBRARY',\n    ADD_JOB = 'ADD_JOB',\n    REFRESH_JOB = 'REFRESH_JOB',\n    LOAD_DOCUMENT = 'LOAD_DOCUMENT',\n    SET_BREADCRUMB = 'SET_BREADCRUMB';\n\nexport interface RootState {\n    jobs: JobModel[];\n    library: LibraryModel;\n    document: any;\n    breadcrumbs: any[];\n}\n\nexport interface Action {\n    type: string;\n    payload: any;\n}\n\nfunction reducer(state: RootState, action: Action) {\n    switch (action.type) {\n        case LOAD_LIBRARY:\n            return {\n                ...state, library: action.payload\n            };\n        case ADD_JOB:\n            return {\n                ...state, jobs: [...state.jobs, action.payload],\n            }\n        case REFRESH_JOB:\n            let newJobs = state.jobs.map((item) => {\n                if (item.id !== action.payload.id) {\n                    return item\n                }\n                return action.payload\n            });\n            return {\n                ...state, jobs: newJobs,\n            }\n        case LOAD_DOCUMENT:\n            return {\n                ...state, document: action.payload\n            }\n        case SET_BREADCRUMB:\n            return {\n                ...state, breadcrumbs: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport const logger: Middleware = (store) => (next) => (action) => {\n    if (process.env.NODE_ENV !== 'production') {\n        console.log(action);\n    }\n    return next(action);\n};\n\nexport function configureStore(initialState?: RootState): Store<RootState> {\n    let middleware = applyMiddleware(thunk, logger);\n\n    return createStore(reducer as any, initialState, middleware) as Store<RootState>;\n}","import {Dispatch, Store} from 'redux';\nimport {ADD_JOB, LOAD_DOCUMENT, LOAD_LIBRARY, REFRESH_JOB} from \"../stores\";\n\nexport const refreshLibrary = async (dispatch: Dispatch, store: Store) => {\n    const data = await fetch(\"http://localhost:8000/api/documents/\").then(d => d.json());\n\n    dispatch({type: LOAD_LIBRARY, payload: {\n        documentsAvailable: 0,\n        documents: data.results,\n        ready: true,\n        loading: false,\n    }});\n}\n\nexport const refreshJob = (jobId: any) => async (dispatch: Dispatch, store: Store) => {\n    await fetch(`http://0.0.0.0:8000/api/documents/${jobId}/details`).then(d => d.json()).then((job: any) => {\n       dispatch({\n           type: REFRESH_JOB,\n           payload: job,\n       })\n    });\n}\n\nexport const loadDocument = (documentId: any) => async (dispatch: Dispatch, store: Store) => {\n    await fetch(`http://0.0.0.0:8000/api/documents/${documentId}/data`).then(d => d.arrayBuffer()).then(d => {\n        dispatch({\n            type: LOAD_DOCUMENT,\n            payload: new Uint8Array(d),\n        })\n    });\n}\n\nexport const addToLibrary = (acceptedFiles: any) => async (dispatch: Dispatch, store: Store) => {\n    for (let file of acceptedFiles) {\n        await fetch(`http://0.0.0.0:8000/api/documents/${file.name}`, {\n            method: 'POST',\n            body: file,\n        }).then(d => d.json())\n        .then(((document: any) => {\n                console.log('here!');\n                dispatch({\n                    type: ADD_JOB,\n                    payload: document,\n                })\n            }\n            // do something to inform the Progress store of the item to watch\n            //\n            // each instance of the progress bar should be phoning home to check\n            // updates to the status.\n        ));\n    }\n}\n","import './Sidebar.css';\nimport {Layout, Menu} from \"antd\";\nimport {FileAddOutlined, ThunderboltOutlined} from \"@ant-design/icons\";\nimport React, {useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../stores\";\nimport {refreshLibrary} from \"../actions/Library\";\nimport {Link} from \"react-router-dom\";\n\nconst {SubMenu} = Menu;\nconst {Sider} = Layout;\n\n\nfunction Sidebar() {\n    const dispatch = useDispatch();\n\n    const {library} = useSelector((state: RootState) => {\n        if (!state) {\n            return {}\n        }\n        return {\n            library: state.library,\n        };\n    });\n\n    useEffect(() => {\n        dispatch(refreshLibrary)\n    }, [])\n\n    return <Sider width={200} className=\"site-layout-background\">\n        <Menu\n            mode=\"inline\"\n            defaultOpenKeys={['sub1']}\n\n            style={{height: '100%', borderRight: 0}}\n        >\n            <Menu.Item key=\"link\" icon={<FileAddOutlined/>}>\n                <Link to=\"/\">Upload</Link>\n            </Menu.Item>\n            <SubMenu key=\"sub1\" icon={<ThunderboltOutlined/>} title=\"Recent\">\n                {library ? library.documents.map(d =>\n                    <Menu.Item key={d.id}>\n                        <Link to={`/documents/${d.id}`}>{d.filename}</Link>\n                    </Menu.Item>\n                ) : null}\n            </SubMenu>\n        </Menu>\n    </Sider>\n}\n\nexport default Sidebar;","interface Props {\n    children: any\n}\n\nexport function Note({ children }: Props) {\n    return <div className=\"pt-3 pb-3 text-center bg-gray-200 rounded-xl shadow-md\">\n        {children}\n    </div>\n}","import {Modal, Button, Select, Input} from \"antd\";\nimport {useForm, Controller} from \"react-hook-form\";\nimport {Note} from \"./Note\";\n\ninterface Props {\n    visible: boolean;\n    onClose: () => void;\n}\n\nexport function SetupWizard({visible, onClose}: Props) {\n    const {register, handleSubmit, control} = useForm();\n\n    const onSubmit = (data: any) => {\n        fetch('http://0.0.0.0:8000/api/config/', {\n            method: 'POST',\n            body: JSON.stringify(data),\n        }).then(res => res.json())\n    };\n\n    return <Modal\n        visible={visible}\n        onCancel={onClose}\n        title=\"Setup Wizard\"\n        footer={[]}\n    >\n        <Note>\n            Can also edit these on the Settings page\n        </Note>\n\n        <br/>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <h3>Storage Options</h3>\n            <Controller\n                name=\"storageOption\"\n                defaultValue=\"nas\"\n                control={control}\n                render={({onChange, value} : any) => (\n                    <Select onChange={onChange} value={value} className=\"w-full\">\n                        <Select.Option value=\"nas\">NAS</Select.Option>\n                        <Select.Option value=\"local\">Local (on the server)</Select.Option>\n                    </Select>\n                )} />\n\n            <br/><br/>\n\n            <h3>Cloud Vision API Key</h3>\n            <Input className=\"w-full\" type=\"text\" {...register(\"gcvKey\")} />\n\n            <br/><br/>\n\n            <h3>Django Secret Key</h3>\n            <Controller\n                name=\"djangoSecretKey\"\n                defaultValue=\"create\"\n                control={control}\n                render={({onChange, value} : any) => (\n                    <Select onChange={onChange} value={value} className=\"w-full\">\n                        <Select.Option value=\"create\">Create one for me</Select.Option>\n                        <Select.Option value=\"custom\">Custom</Select.Option>\n                    </Select>\n                )} />\n            \n            <br />\n            <Button onClick={onClose}>\n                Return\n            </Button>\n            <button type=\"submit\">\n                Submit\n            </button>\n\n        </form>\n    </Modal>;\n}","import React, {useEffect} from 'react';\nimport './App.css';\n\nimport {Breadcrumb, Button, Input, Layout, Menu} from 'antd';\nimport Sidebar from \"./Sidebar\";\nimport {RootState} from \"../stores\";\nimport {useSelector} from 'react-redux';\nimport {useQuery} from 'react-query';\nimport {SetupWizard} from \"./SetupWizard\";\nimport {useState} from 'react';\nimport {SearchOutlined} from '@ant-design/icons';\nimport {useHistory} from 'react-router';\nimport {Link} from 'react-router-dom';\n\nconst {Header, Content} = Layout;\n\ninterface AppProps {\n    children: any\n}\n\nfunction App(props: AppProps) {\n    const [wizardOpen, setWizardOpen] = useState(false)\n    const [search, setSearch] = useState<string>();\n    const history = useHistory();\n\n    const onSearch = () => {\n        if (!search) {\n            // TODO - alert?\n            return;\n        }\n\n        history.push(`/search?q=${encodeURIComponent(search)}`)\n    }\n\n    const {breadcrumbs} = useSelector((state: RootState) => {\n        if (!state) {\n            return {}\n        }\n        return {\n            breadcrumbs: state.breadcrumbs,\n        };\n    });\n\n    useEffect(() => {\n        //const {isLoading, error, data} = useQuery('config', () =>\n        //        fetch('http://0.0.0.0:8000/api/config/').then(res => res.json()), {retry: false});\n\n        //if (error) {\n        //    console.log(error);\n        //}\n    }, [])\n\n    return (\n        <Layout>\n            <SetupWizard visible={wizardOpen} onClose={() => setWizardOpen(false)}/>\n            <Header className=\"header AppHeader\">\n                <div className=\"AppLogo\">\n                    librarian\n                </div>\n                <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['2']}>\n                    <Menu.Item key=\"1\"><Link to={'/'}>Home</Link></Menu.Item>\n                    <Menu.Item key=\"2\">Docs</Menu.Item>\n                    <Menu.Item key=\"3\">Search</Menu.Item>\n                    <Menu.Item onClick={() => setWizardOpen(true)} key=\"4\">Settings</Menu.Item>\n\n                    <div key=\"5\" className=\"items-center h-16 flex float-right pr-4 w-auto\">\n                        <Input onChange={(e) => setSearch(e.target.value)}\n                               onPressEnter={onSearch}\n                               type=\"text\"\n                               placeholder=\"Search\"/>\n                        <Button onClick={onSearch} className=\"items-center\"><SearchOutlined/></Button>\n                    </div>\n                </Menu>\n\n            </Header>\n            <Layout>\n                <Sidebar/>\n                <Layout style={{padding: '0 24px 24px'}}>\n                    <Breadcrumb style={{margin: '16px 0'}}>\n                        {breadcrumbs ? breadcrumbs.map((b, idx) =>\n                            <Breadcrumb.Item key={idx}>{b}</Breadcrumb.Item>\n                        ) : null}\n                    </Breadcrumb>\n                    <Content className=\"AppContent\">\n                        {props.children}\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","import './Sidebar.css';\nimport {Progress as ProgressT} from \"antd\";\nimport React from \"react\";\n\nexport interface ProgressProps {\n    percent: number;\n    done: boolean;\n    success: boolean;\n}\n\nfunction Progress(props: ProgressProps) {\n\n    return <div>\n        <ProgressT percent={props.percent} status={props.done ? (props.success ? \"success\" : \"exception\") : \"active\"}/>\n    </div>\n}\n\nexport default Progress;","import './Sidebar.css';\nimport './Job.css';\nimport React from \"react\";\nimport {useInterval} from \"../utils/setInterval\";\nimport {useDispatch} from \"react-redux\";\nimport {refreshJob} from \"../actions/Library\";\nimport Progress from \"./Progress\";\nimport {Link} from \"react-router-dom\";\n\nexport interface JobProps {\n    job: any\n}\n\nfunction Job(props: JobProps) {\n    const dispatch = useDispatch();\n\n    useInterval(() => {\n        dispatch(refreshJob(props.job.id))\n    }, props.job.status === 'ANNOTATED' ? null : 1000)\n\n    let progress = () => {\n        switch (props.job.status) {\n            case \"CREATED\":\n                return <Progress percent={10} done={false} success={false}/>\n            case \"PERSISTING\":\n                return <Progress percent={25} done={false} success={false}/>\n            case \"PERSISTED\":\n                return <Progress percent={40} done={false} success={false}/>\n            case \"TRANSLATING_PDF_TO_IMAGES\":\n                return <Progress percent={55} done={false} success={false}/>\n            case \"TRANSLATED_PDF_TO_IMAGES\":\n                return <Progress percent={70} done={false} success={false}/>\n            case \"ANNOTATING\":\n                return <Progress percent={85} done={false} success={false}/>\n            case \"ANNOTATED\":\n                return <Progress percent={100} done={true} success={true}/>\n            default:\n                return <Progress percent={100} done={true} success={false}/>\n        }\n    }\n\n    return <div className=\"Job\">\n        <div className=\"JobFilename\">\n            {props.job.status === \"ANNOTATED\" ?\n                <Link to={`/documents/${props.job.id}`}>{props.job.filename}</Link> : props.job.filename}\n        </div>\n        <div className=\"JobProgress\">\n            {progress()}\n        </div>\n    </div>\n}\n\nexport default Job;","import {useEffect, useRef} from 'react';\n\nexport function useInterval(callback: Function, delay: number | null) {\n    const savedCallback = useRef() as any;\n\n    // Remember the latest callback.\n    useEffect(() => {\n        savedCallback.current = callback;\n\n    }, [callback]);\n\n    // Set up the interval.\n    useEffect(() => {\n        function tick() {\n            savedCallback.current();\n        }\n\n        if (delay !== null) {\n            let id = setInterval(tick, delay);\n            return () => clearInterval(id);\n        }\n    }, [delay]);\n}","import React, {useCallback, useEffect} from \"react\";\nimport './Uploader.css';\nimport {useDropzone} from \"react-dropzone\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addToLibrary} from \"../actions/Library\";\nimport {List} from 'antd';\nimport {FileAddOutlined} from '@ant-design/icons';\nimport Job from \"./Job\";\nimport {RootState, SET_BREADCRUMB} from \"../stores\";\n\n\nconst Uploader = () => {\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch({\n            type: SET_BREADCRUMB,\n            payload: [\"Docs\", \"Upload\"]\n        })\n    }, [])\n\n    const {jobs} = useSelector((state: RootState) => {\n        if (!state) {\n            return {}\n        }\n        return {\n            jobs: state.jobs,\n        };\n    });\n\n    const onDropInternal = useCallback(acceptedFiles => {\n        dispatch(addToLibrary(acceptedFiles));\n    }, []);\n\n    const {getRootProps, getInputProps, isDragActive} = useDropzone({onDrop: onDropInternal} as any)\n\n    return <div>\n        <div {...getRootProps()} className=\"Uploader\">\n            <input {...getInputProps() as any} />\n            <p/><p/>\n            <FileAddOutlined style={{fontSize: 50}}/>\n            <p/>\n            {\n                isDragActive ?\n                    <p className=\"UploaderText\">Drop the files here ...</p> :\n                    <p className=\"UploaderText\">Drag 'n' drop some files here, or click to select files</p>\n            }\n        </div>\n        <div>\n            <List\n                itemLayout=\"horizontal\"\n                dataSource={jobs}\n                renderItem={job => (\n                    <List.Item>\n                        <Job job={job}/>\n                    </List.Item>\n                )}\n            />\n        </div>\n    </div>;\n}\n\nexport default Uploader;","import React, {useEffect, useRef, useState} from \"react\";\nimport './Uploader.css';\nimport {useParams} from \"react-router-dom\";\nimport {Spin} from \"antd\";\n\nimport {Document, Page} from 'react-pdf/dist/esm/entry.webpack';\nimport {useContainerDimensions} from \"../utils/useContainerDimenstions\";\nimport {SET_BREADCRUMB} from \"../stores\";\nimport {useDispatch} from \"react-redux\";\n//import {VariableSizeList} from 'react-window';\n\n\nconst Viewer = () => {\n    const dispatch = useDispatch();\n    let {documentId} = useParams<any>();\n\n\n    useEffect(() => {\n        dispatch({\n            type: SET_BREADCRUMB,\n            payload: [\"Docs\", \"Recent\"]\n        })\n    }, [])\n\n    const [numPages, setNumPages] = useState(null);\n    const [pdf, setPdf] = useState(null);\n\n    const onDocumentLoadSuccess = (pdf: any) => {\n        setNumPages(pdf.numPages);\n        setPdf(pdf);\n    }\n\n    const containerRef = useRef<any>()\n    const { width } = useContainerDimensions(containerRef)\n\n    return <div ref={containerRef}>\n        <Document file={`http://0.0.0.0:8000/api/documents/${documentId}/data`}\n                  loading={<Spin size=\"large\"/>}\n                  onLoadSuccess={onDocumentLoadSuccess}>\n                {Array.from(new Array(numPages), (el, index) => (\n                    <Page width={width} key={`page_${index + 1}`}\n                          pageNumber={index + 1}/>\n                ))}\n        </Document>\n    </div>;\n}\n\nexport default Viewer;","import React, {useEffect, useState} from \"react\";\n\nexport function useContainerDimensions(myRef: React.RefObject<any>) {\n    const [dimensions, setDimensions] = useState({width: 0, height: 0});\n\n    useEffect(() => {\n        const getDimensions = () => ({\n            width: (myRef && myRef.current.offsetWidth) || 0,\n            height: (myRef && myRef.current.offsetHeight) || 0,\n        });\n\n        const handleResize = () => {\n            setDimensions(getDimensions());\n        };\n\n        if (myRef.current) {\n            setDimensions(getDimensions());\n        }\n\n        window.addEventListener('resize', handleResize);\n\n        return () => {\n            window.removeEventListener('resize', handleResize);\n        };\n    }, [myRef]);\n\n    return dimensions;\n}","import axios from \"axios\";\nimport {useEffect, useState} from \"react\";\nimport {useLocation} from \"react-router\";\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Search() {\n    const [documentSearch, setDocumentSearch] = useState([])\n    const [documentTextSearch, setDocumentTextSearch] = useState([])\n    const query = useQuery();\n    const q = query.get('q');\n    console.log(q);\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/api/documents/search', {\n            params: {q}\n        }).then(d => setDocumentSearch(d.data))\n\n        axios.get('http://localhost:8000/api/documents/text/search', {\n            params: {q}\n        }).then(d => setDocumentTextSearch(d.data))\n    }, [q])\n\n    return <div>\n        <h1>Document Search</h1>\n        <p>{JSON.stringify(documentSearch)}</p>\n\n        <h1>Document Text Search</h1>\n        <p>{JSON.stringify(documentTextSearch)}</p>\n    </div>\n}\n\nexport default Search","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'antd/dist/antd.css';\nimport App from './components/App';\nimport {configureStore} from \"./stores\";\nimport {Provider} from \"react-redux\";\nimport Uploader from \"./components/Uploader\";\nimport {HashRouter, Route, Switch} from \"react-router-dom\";\nimport Viewer from \"./components/Viewer\";\nimport {QueryClient, QueryClientProvider} from 'react-query';\nimport Search from \"./components/Search\";\n\nconst store = configureStore({\n    jobs: [],\n    library: {\n        documentsAvailable: 0,\n        documents: [],\n        ready: false,\n        loading: false,\n    },\n    document: null,\n    breadcrumbs: [],\n});\n\nconst queryClient = new QueryClient()\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <HashRouter>\n                <QueryClientProvider client={queryClient}>\n                    <App>\n                        <Switch>\n                            <Route path=\"/documents/:documentId\">\n                                <Viewer/>\n                            </Route>\n                            <Route path=\"/search\">\n                                <Search/>\n                            </Route>\n                            <Route path=\"/\">\n                                <Uploader/>\n                            </Route>\n                        </Switch>\n                    </App>\n                </QueryClientProvider>\n            </HashRouter>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}