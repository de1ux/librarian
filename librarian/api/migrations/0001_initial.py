# Generated by Django 3.2.15 on 2022-08-21 21:51

from django.db import migrations, models
import django.db.models.deletion


def CreateDefaultFolder(apps, schema_editor):
    Folder = apps.get_model("api", "Folder")

    # make default folder if not exists
    Folder.objects.update_or_create(name="Unsorted")


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('filename', models.TextField()),
                ('source_content_type', models.IntegerField(choices=[(1, 'Jpeg'), (2, 'Png'), (3, 'Pdf')], default=3)),
                ('hash', models.TextField(null=True)),
                ('temp_path', models.TextField(null=True)),
                ('filestore_path', models.TextField(null=True)),
                ('status', models.TextField(
                    choices=[('CREATED', 'CREATED'), ('PERSISTING', 'PERSISTING'), ('PERSISTED', 'PERSISTED'),
                             ('TRANSLATING_PDF_TO_IMAGES', 'TRANSLATING_PDF_TO_IMAGES'),
                             ('TRANSLATED_PDF_TO_IMAGES', 'TRANSLATED_PDF_TO_IMAGES'), ('ANNOTATING', 'ANNOTATING'),
                             ('ANNOTATED', 'ANNOTATED')], default='CREATED')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Folder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='StorageSettingsLocal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_path', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageSettingsNFS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('storage_path', models.TextField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageSettingsS3',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('aws_access_key_id', models.TextField()),
                ('aws_secret_access_key', models.TextField()),
                ('bucket', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('documents', models.ManyToManyField(to='api.Document')),
            ],
        ),
        migrations.CreateModel(
            name='Settings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('google_cloud_api_key', models.TextField(null=True)),
                ('storage_mode',
                 models.CharField(choices=[('local', 'Local'), ('nfs', 'Nfs'), ('s3', 'S3')], default='local',
                                  max_length=20)),
                ('storage_settings_id', models.PositiveIntegerField()),
                ('storage_settings_type',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentPageImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_number', models.IntegerField()),
                ('temp_path', models.TextField(null=True)),
                ('text', models.TextField(null=True)),
                ('metadata', models.TextField(null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pages',
                                               to='api.document')),
            ],
        ),
        migrations.CreateModel(
            name='DocumentJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kind', models.TextField(
                    choices=[('PERSIST', 'PERSIST'), ('TRANSLATE_TO_IMAGES', 'TRANSLATE_TO_IMAGES'),
                             ('ANNOTATE', 'ANNOTATE')])),
                ('current_status', models.TextField(
                    choices=[('CREATED', 'CREATED'), ('PERSISTING', 'PERSISTING'), ('PERSISTED', 'PERSISTED'),
                             ('TRANSLATING_PDF_TO_IMAGES', 'TRANSLATING_PDF_TO_IMAGES'),
                             ('TRANSLATED_PDF_TO_IMAGES', 'TRANSLATED_PDF_TO_IMAGES'), ('ANNOTATING', 'ANNOTATING'),
                             ('ANNOTATED', 'ANNOTATED')])),
                ('desired_status', models.TextField(
                    choices=[('CREATED', 'CREATED'), ('PERSISTING', 'PERSISTING'), ('PERSISTED', 'PERSISTED'),
                             ('TRANSLATING_PDF_TO_IMAGES', 'TRANSLATING_PDF_TO_IMAGES'),
                             ('TRANSLATED_PDF_TO_IMAGES', 'TRANSLATED_PDF_TO_IMAGES'), ('ANNOTATING', 'ANNOTATING'),
                             ('ANNOTATED', 'ANNOTATED')])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(null=True)),
                ('successful', models.BooleanField(null=True)),
                ('failed_reason', models.TextField(null=True)),
                ('document', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.document')),
            ],
        ),
        migrations.AddField(
            model_name='document',
            name='folder',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='documents',
                                    to='api.folder'),
        ),
        migrations.AddIndex(
            model_name='settings',
            index=models.Index(fields=['storage_settings_type', 'storage_settings_id'],
                               name='api_setting_storage_6d74f7_idx'),
        ),
        migrations.RunPython(CreateDefaultFolder),
    ]
